@using WebClient
@{
    ViewData["Title"] = "Home Page";
}
<style>
    td {
        padding: 5px 10px;
        margin: auto;
        align-content: center;
        text-align: center;
    }
</style>
<br /><br /><br />
<div class="row">
    <button type="button" class="btn btn-primary btn-lg btn-block" data-bind="click: doPing">Ping</button>
</div>
<hr />
<div class="row">
    <table>
        <thead>
            <tr>
                <th>Ping</th>
                <th>&nbsp;</th>
            </tr>
        </thead>
        <tbody data-bind="foreach: ping">
            <tr data-bind="css: { 'bg-danger' : isTimedOut(), 'bg-success' : isReceived(), 'bg-warning' : !isTimedOut() && !isReceived() }">
                <td><span data-bind="text: relay"></span></td>
                <!-- ko if: isTimedOut() -->
                <td>Timed out</td>
                <!-- /ko -->
                <!-- ko if: isReceived() -->
                <td>Pong received</td>
                <!-- /ko -->
                <!-- ko if: !isTimedOut() && !isReceived() -->
                <td><button type="button" class="btn btn-primary btn-xs" data-bind="click : $root.doPong">Pong</button></td>
                <!-- /ko -->
            </tr>
        </tbody>
    </table>
</div>

<script type="text/javascript">
    var pingUrl = '@WebClientConfiguration.PingUrl';
    var pongUrl = '@WebClientConfiguration.PongUrl';

    $(function() {
        var PingViewModel = function() {
            var self = this;

            self.ping = ko.observableArray([ 
            ]);

            self.doPing = function() {
                $.post(pingUrl, { }, function (data) {
                    self.ping.push({
                        relay: data.relay,
                        isTimedOut: ko.observable(false),
                        isReceived: ko.observable(false)
                    });
                });
            };

            self.doPong = function(ping) {
                $.post(pongUrl, { relay: ping.relay }, function() {

                });
            }

            self.onTimeout = function () {

            }

            self.onComplete = function () {

            }
        };

        ko.applyBindings(new PingViewModel([]));
    });
</script>